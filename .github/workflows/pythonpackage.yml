name: Python package

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - '.pre-commit-config.yaml'
  pull_request:
  release:
    types:
      - published

jobs:
  test:

    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: cmd }
          - { os: ubuntu-latest, shell: bash }
          - { os: macos-latest, shell: bash }
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install -r requirements-build.txt
        python -m pip install -r requirements-test.txt
    - name: Build
      run: |
        python setup.py build_ext --inplace
    - name: Run tests
      run: |
        python test.py

  build-wheels:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: test

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install -r requirements-build.txt
        python -m pip install cibuildwheel==2.3.1
    - name: Build wheels
      run: |
        python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_SKIP: "pp* *-musllinux_*"
    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build-sdist:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: test

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install -r requirements-build.txt
    - name: Build dists
      run: |
        python setup.py sdist
    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  upload-pypi:
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
